<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.train.dao.RefundOrderMapper">

	<resultMap type="com.training.modules.train.entity.ArrearageOfficeList" id="ArrearageOfficeList">
		<result column="office_id" property="office_id"/>
		<result column="used_limit" property="used_limit"/>
	</resultMap>

	<select id="queryarrearageoffice" parameterType="java.lang.String" resultMap="ArrearageOfficeList">
		SELECT 
			s.office_id,
			SUM(os.used_limit) AS used_limit
		FROM trains.sys_office_account s
		LEFT JOIN trains.sys_office_statement os ON s.office_id = os.office_id
		LEFT JOIN trains.train_refund_order ro ON ro.arrearage_office = s.office_id AND  DATE_FORMAT(ro.add_time,'%Y-%m') = #{format}
		WHERE DATE_FORMAT(os.create_date,'%Y-%m') = #{format}
		GROUP BY s.office_id HAVING used_limit > 0 AND COUNT(ro.order_id) = 0
	</select>

	<insert id="addrefundOrder" parameterType="java.util.List">
		INSERT INTO trains.train_refund_order
		(
			order_id,
			order_type,
			arrearage_price,
			arrearage_office,
			add_time,
			order_status
		)
		VALUES
		<foreach collection="subList" item="item" separator="," >  
	        (
			#{item.order_id},
			1,
			${item.used_limit},
			#{item.office_id},
			NOW(),
			1
		)
	    </foreach>
		
	</insert>
	
	<update id="updateOfficeAccount">
		UPDATE 
			trains.sys_office_account oa
		INNER JOIN (SELECT arrearage_office FROM trains.train_refund_order WHERE order_status = 1 GROUP BY arrearage_office) s ON s.arrearage_office = oa.office_id
		SET oa.freeze = 1
		WHERE oa.freeze = 0
	</update>
	
</mapper>