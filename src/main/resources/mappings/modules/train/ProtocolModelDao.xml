<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.train.dao.ProtocolModelDao">
    <!-- <resultMap id="menuResult" type="MediaMenu">
		<id property="id" column="id" />
		<result property="pid" column="pid" />
		<result property="name" column="name" />
		<result property="content" column="content" />
		<result property="type" column="type" />
		<result property="sort" column="sort" />
		<result property="isShow" column="is_show" />
		<result property="isPay" column="is_pay" />
		 查询父模块 
        <association property="parent" column="parent_id" select="getParent" />   
         	 查询子模块  
        <collection property="children" column="id" select="getChildren" />  
	</resultMap>--> 
    
	<sql id="menuColumns">
		m.id,
		m.pid,
		m.`name`,
		m.content,
		m.`status`,
		m.type_id as type,
		m.create_date,
		m.create_user as 'createBy.name'
	</sql>
	<select id="findModelTypeList" resultType="ProtocolType">
		SELECT id,name,`status` FROM `supply_protocol_type`;
	</select>
	<!-- 根据ID查找单个协议内容 -->
	<select id="findModel" resultType="ProtocolModel">
		SELECT <include refid="menuColumns"/> FROM `supply_protocol_model` m WHERE m.id = #{id} AND del_flag = 0;
	</select>
	
	<!-- 根据类型查找模板列表 -->
	<select id="findModelList" resultType="ProtocolModel">
		SELECT <include refid="menuColumns"/> FROM `supply_protocol_model` m WHERE m.type_id = #{type} AND status = 1 AND del_flag = 0;
	</select>
	<!-- 根据类型查找模板列表 -->
	<select id="findOldModelList" resultType="ProtocolModel">
		SELECT <include refid="menuColumns"/> FROM `supply_protocol_model` m WHERE m.pid = #{id} AND del_flag = 0 ORDER BY create_date DESC;
	</select>
	
	<!-- 保存协议内容  -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `trains`.`supply_protocol_model` ( 
			`pid`,
			`name`,
			`content`,
			`status`,
			`type_id`,
			`create_date`,
			`create_by`,
			`create_user`,
			`del_flag`
		)
		VALUES
			( 
				#{pid},
				#{name},
				#{content},
				#{status},
				#{type},
				#{createDate},
				#{createBy.id},
				#{createBy.name},
				0
			);
	</insert>
	<!-- 更新supply_protocol_shop协议状态状态 -->
	<update id="updateProtocolShopById">
		UPDATE supply_protocol_shop SET 
			`status` = #{status}
		WHERE protocol_id = #{id} 
	</update>
	<delete id="deleteProtocolShopById">
		DELETE FROM supply_protocol_shop WHERE protocol_id = #{id}  
	</delete>
	<!-- 更新单个协议状态状态 -->
	<update id="updateStatusById">
		UPDATE supply_protocol_model SET 
			`status` = #{status}
		WHERE id = #{id} 
	</update>
	<!-- 更新单个协议内容状态 -->
	<update id="updateModelById">
		UPDATE supply_protocol_model SET 
			`name` = #{name},
			`content` = #{content}
		WHERE id = #{id} 
	</update>
	<!-- 跟新协议类型状态 -->
	<update id="updateStatusByType">
		UPDATE supply_protocol_model SET 
			`status` = #{status}
		WHERE type = #{type} AND status != 3
	</update>
	<!-- 跟新协议状态 -->
	<update id="updateModelTypeStatus">
		UPDATE supply_protocol_type SET 
			`status` = #{status}
		WHERE id = #{type} 
	</update>
	
	
	<select id="findProtocolList" resultType="ProtocolUser">
		SELECT 
			pu.id,
			fr.`name` AS companyName,
			office.`name` AS officeName,
			pm.`name` AS protocolName,
			pu.`status`,
			pu.type,
			u.`name` AS 'createBy.name',
			pu.auth_start_date,
			pu.auth_end_date AS authEndDate,
			pu.create_date
		FROM supply_protocol_shop pu 
		LEFT JOIN sys_franchisee fr ON fr.id= pu.franchisee_id
		LEFT JOIN sys_office office ON office.id= pu.office_id
		LEFT JOIN sys_user u ON  u.id =pu.user_id
		LEFT JOIN supply_protocol_model pm ON pm.id= pu.protocol_id
		WHERE pu.del_flag = 0 AND pu.type_id = 4
		<!-- <if test="createBy != null and createBy.name != ''">
			AND name = #{createBy.name}
		</if> -->
		<if test="status != null and status != ''">
			AND pu.status = #{status}
		</if>
		<if test="franchiseeId != null and franchiseeId != ''">
			AND fr.id = #{franchiseeId}
		</if>
	</select>
	
	<select id="findProtocolListOfOffice" resultType="ProtocolUser">
		SELECT 
			pu.id,
			fr.`name` AS companyName,
			office.`name` AS officeName,
			pm.`name` AS protocolName,
			pu.`status`,
			pu.type,
			u.`name` AS 'createBy.name',
			pu.auth_start_date,
			pu.auth_end_date AS authEndDate,
			pu.create_date
		FROM supply_protocol_shop pu 
		LEFT JOIN sys_franchisee fr ON fr.id= pu.franchisee_id
		LEFT JOIN sys_office office ON office.id= pu.office_id
		LEFT JOIN sys_user u ON  u.id =pu.user_id
		LEFT JOIN supply_protocol_model pm ON pm.id= pu.protocol_id
		WHERE pu.del_flag = 0 AND pu.type_id = 4 and pu.status = '1' and pu.office_id =#{office_id}
	</select>
</mapper>