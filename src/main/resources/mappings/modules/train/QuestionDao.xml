<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.train.dao.QuestionDao">
    
	<sql id="menuColumns">
		q.`id`,
		q.`name`,
		q.`content`,
		q.`status`,
		q.`type`,
		q.`create_by`,
		q.`create_date`,
		q.`update_by`,
		q.`update_date`,
		q.`del_flag`
	</sql>
	<select id="findList" resultType="Question">
		SELECT <include refid="menuColumns"/>,
			(SELECT GROUP_CONCAT(h. NAME) FROM handbook_type h LEFT JOIN question_handbook qh ON qh.hid = h.id WHERE qh.qid= q.id) AS typeName FROM `question` q
			LEFT JOIN question_handbook qh ON qh.qid = q.id
			LEFT JOIN handbook_type h ON h.id = qh.hid where q.`del_flag` = 0
		<if test="type != null and type != ''">AND q.type = #{type}</if>
		<if test="typeId != null and typeId != ''">AND h.id = #{typeId}</if>
		<if test="typeId2 != null and typeId2 != ''">AND h.id = #{typeId2}</if>
		GROUP BY q.id
	</select>
	
	<!-- 根据id查看 -->
	<select id="get" resultType="Question">
		SELECT
			<include refid="menuColumns"/>,GROUP_CONCAT(qh.hid) AS typeId
		FROM
			`question` q 
		LEFT JOIN question_handbook qh ON qh.qid = q.id
		where q.id = #{id}
	</select>
	<!-- 添加 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO question(
			`name`,
			`content`,
			`status`,
			`type`,
			`create_by`,
			`create_date`,
			`update_by`,
			`update_date`,
			`del_flag`
		) VALUES (
			#{name},
			#{content},
			#{status},
			#{type},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	<insert id="saveQuestionHandbook">
		INSERT INTO `trains`.`question_handbook`
			(`qid`, `hid`)
		VALUES
			(#{id}, #{typeId});
					
	</insert>
	<delete id="deleteByLogic">
		DELETE FROM question WHERE id = #{id}
	</delete>
	<delete id="deleteQuestionHandbook">
		DELETE FROM question_handbook WHERE qid = #{id}
	</delete>
	<update id="update">
		UPDATE question SET 
			`name` = #{name},
			`content` = #{content},
			`type` = #{type},
			`update_by` = #{updateBy.id},
			`update_date` = #{updateDate}
		WHERE id = #{id} 
	</update>
	<!-- 修改手册状态 -->
	<update id="updateIsOpen">
		UPDATE 
		  question 
		SET
		 status = #{status}
		WHERE id = #{id} 
	</update>
	<select id="findBookType" resultType="HandbookType">
		SELECT
			h.id,
			h.is_shop,
			h. NAME
		FROM
			handbook_type h
		LEFT JOIN question_handbook qh ON qh.hid = h.id
		WHERE
			qh.qid = #{id} 
	</select>
</mapper>