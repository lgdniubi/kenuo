<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.train.dao.ArticleListDao">
	<select id="lookAllArticle" resultType="Article">
		SELECT a.article_id,a.title,b.name,a.CREATETIME,u.name AS uName,
			(SELECT COUNT(*) FROM train_article_comment AS c,sys_user AS u WHERE c.article_id=A.article_id AND c.STATUS=0 AND u.id=c.CREATEUSER AND u.del_flag=0) 
			AS NUM
		 	FROM 
			train_article as a,train_article_category as b,sys_user as u
			WHERE 
			1=1
			AND a.createuser = u.id
			AND a.status=0
			and a.del_flag=0
			and a.cate_id=b.categoryid
			<if test="cateId != 'null' and cateId !='' and cateId !=null ">
			and	cate_id = #{cateId}
			</if>
			<if test="title != null and title != ''">
			and title LIKE 
				<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{title}, '%')</if>
			</if>
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
			ORDER BY CREATETIME DESC
	</select>
	<select id="detail" parameterType="Article" resultType="Article">
		SELECT 
			a.ARTICLE_ID,a.TITLE,a.content,a.CREATETIME,a.STATUS,a.CREATEUSER,b.name,b.categoryid as cateId
		 	FROM 
			train_article as a,train_article_category as b
			WHERE 
			ARTICLE_ID=#{articleId}
			and a.cate_id=b.categoryid
			and a.del_flag=0
	</select>
	<select id="lookAllCategory" parameterType="ArticleCategory" resultType="ArticleCategory">
		SELECT a.CATEGORYID,a.NAME,a.CREATETIME FROM train_article_category AS a
			WHERE 
			a.status=0
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
	</select>
	<select id="lookAllArticleByCategory" parameterType="ArticleCategory" resultType="java.lang.Integer">
		SELECT count(*) FROM train_article
			WHERE 
			del_flag=0
			and cate_id=#{categoryId}
	</select>
	<select id="findListComment" resultType="ArticleComment">
		SELECT A.article_id,A.CONTENT,A.CREATETIME,A.COMMENT_ID,B.NAME ,B.PHOTO
			FROM  
			train_article_comment AS A,SYS_USER AS B
			WHERE 
			A.article_id = #{articleId}
			and A.status=0
			and b.id=a.createuser
			and B.del_flag=0
			ORDER BY A.CREATETIME DESC
	</select>
	<insert id="addArticlCategory" parameterType="ArticleCategory">
		INSERT INTO train_article_category(
			CATEGORYID,
			NAME,
			STATUS,
			CREATEUSER,
			OFFICE_CODE,
			CREATETIME
		) VALUES (
			#{categoryId},
			#{name},
			#{status},
			#{createuser},
			(
			select code from sys_office where id=(select office_id from sys_user where id=#{createuser})
			),
			SYSDATE()
		)
	</insert>
	<update id="saveArticlCategory" parameterType="ArticleCategory">
		UPDATE train_article_category SET 
			NAME=#{name},
			CREATETIME=SYSDATE()
			where
			CATEGORYID = #{categoryId}
	</update>
	<update id="updateArticlCategory" parameterType="ArticleCategory">
		UPDATE train_article_category SET 
			status=#{status}
			where
			CATEGORYID = #{categoryId}
	</update>
	<insert id="addArticl" parameterType="Article">
		INSERT INTO train_article(
			article_id,
			cate_id,
			title,
			content,
			STATUS,
			CREATEUSER,
			OFFICE_CODE,
			CREATETIME,
			del_flag
		) VALUES (
			#{articleId},
			#{cateId},
			#{title},
			#{content},
			#{status},
			#{createuser},
			(
			select code from sys_office where id=(select office_id from sys_user where id=#{createuser})
			),
			SYSDATE(),
			#{delflag}
		)
	</insert>
	<update id="updateArticle"  parameterType="Article">
		UPDATE train_article SET 
			cate_id = #{cateId},
			title = #{title},
			content = #{content},
			CREATETIME = SYSDATE()
			WHERE 
			article_id=#{articleId}
	</update>
	<update id="deleteAll"  parameterType="Article">
		UPDATE train_article SET 
			del_flag = #{delflag}
			WHERE 
			article_id = #{articleId}
	</update>
	<update id="updateComment">
		UPDATE train_article_comment SET 
			status=#{status}
			WHERE 
			comment_id = #{commentId}
	</update>
</mapper>