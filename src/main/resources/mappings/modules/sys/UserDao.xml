<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.sys.dao.UserDao">
	
<!-- 	 <resultMap id="userResult" type="User"> -->
<!-- 		<id property="id" column="id" /> -->
<!-- 		<result property="company.id" column="company.id" /> -->
<!-- 		<result property="office.id" column="office.id" /> -->
<!-- 		<result property="loginName" column="login_name" /> -->
<!-- 		<result property="password" column="password" /> -->
<!-- 		<result property="no" column="no" /> -->
<!-- 		<result property="name" column="name" /> -->
<!-- 		<result property="email" column="email" /> -->
<!-- 		<result property="phone" column="phone" /> -->
<!-- 		<result property="mobile" column="mobile" /> -->
<!-- 		<result property="userType" column="user_type" /> -->
<!-- 		<result property="loginIp" column="login_ip" /> -->
<!-- 		<result property="loginDate" column="login_date" /> -->
<!-- 		<result property="remarks" column="remarks" /> -->
<!-- 		<result property="loginFlag" column="loginFlag" /> -->
<!-- 		<result property="photo" column="photo" /> -->
<!-- 		<result property="createBy.id" column="createBy.id" /> -->
<!-- 		<result property="createDate" column="create_date" /> -->
<!-- 		<result property="updateBy.id" column="updateBy.id" /> -->
<!-- 		<result property="updateDate" column="update_date" /> -->
<!-- 		<result property="company.name" column="company.name" /> -->
<!-- 		<result property="company.parentId" column="company.parentId" /> -->
<!-- 		<result property="company.parentIds" column="company.parentIds" /> -->
<!-- 		<result property="company.area.id" column="company.area.id" /> -->
<!-- 		<result property="company.area.name" column="company.area.name" /> -->
<!-- 		<result property="company.area.parentId" column="company.area.parentId" /> -->
<!-- 		<result property="company.area.parentIds" column="company.area.parentIds" /> -->
<!-- 		<result property="company.primaryPerson.id" column="company.primaryPerson.id" /> -->
<!-- 		<result property="company.primaryPerson.name" column="company.primaryPerson.name" /> -->
<!-- 		<result property="company.deputyPerson.id" column="company.deputyPerson.id" /> -->
<!-- 		<result property="company.deputyPerson.name" column="company.deputyPerson.name" /> -->
<!-- 		<result property="office.name" column="office.name" /> -->
<!-- 		<result property="office.parentId" column="office.parentId" /> -->
<!-- 		<result property="office.parentIds" column="office.parentIds" /> -->
<!-- 		<result property="office.area.id" column="office.area.id" /> -->
<!-- 		<result property="office.area.name" column="office.area.name" /> -->
<!-- 		<result property="office.area.parentId" column="office.area.parentId" /> -->
<!-- 		<result property="office.area.parentIds" column="office.area.parentIds" /> -->
<!-- 		<result property="office.primaryPerson.id" column="office.primaryPerson.id" /> -->
<!-- 		<result property="office.primaryPerson.name" column="office.primaryPerson.name" /> -->
<!-- 		<result property="office.deputyPerson.id" column="office.deputyPerson.id" /> -->
<!-- 		<result property="office.deputyPerson.name" column="office.deputyPerson.name" /> -->
<!-- 		<collection property="roleList" ofType="Role"> -->
<!-- 			<id property="id" column="roleList.id" /> -->
<!-- 			<result property="office.id" column="roleList.office.id" /> -->
<!-- 			<result property="name" column="roleList.name" /> -->
<!-- 			<result property="enname" column="roleList.enname" /> -->
<!-- 			<result property="roleType" column="roleList.roleType" /> -->
<!-- 			<result property="dataScope" column="roleList.dataScope" /> -->
<!-- 			<collection property="officeList" ofType="Office"> -->
<!-- 				<id property="id" column="roleList.officeList.id" /> -->
<!-- 			</collection> -->
<!-- 		</collection> -->
<!-- 	</resultMap> -->
	<!-- 用户权限 -->
	<resultMap type="User" id="userAuthRreult">
		<id property="id" column="user_id" />
		<collection property="officeList" ofType="Office">
			<id property="id" column="officeList.id" />
		</collection>
	</resultMap>
	
    <sql id="userColumns">
    	a.id,
    	a.company_id AS "company.id",
    	a.office_id AS "office.id",
    	c.code as "code",
    	a.login_name,
    	a.password,
    	a.no,
    	a.idcard,
    	a.induction_time,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.qrcode,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.del_remarks,
		a.gold,
		a.user_money,
		a.mtmy_user_id AS mtmyUserId,
		a.data_scope AS 'dataScope',
		a.sex,
		a.type,
		a.is_recommend AS 'isRecommend',
    	c.name AS "company.name",
    	c.parent_id AS "company.parent.id",
    	c.parent_ids AS "company.parentIds",
    	ca.id AS "company.area.id",
    	ca.name AS "company.area.name",
    	ca.parent_id AS "company.area.parent.id",
    	ca.parent_ids AS "company.area.parentIds",
    	o.name AS "office.name",
    	o.parent_id AS "office.parent.id",
    	o.parent_ids AS "office.parentIds",
		o.code AS "office.code",
		o.type AS 'office.type',
    	oa.id AS "office.area.id",
    	oa.name AS "office.area.name",
    	oa.parent_id AS "office.area.parent.id",
    	oa.parent_ids AS "office.area.parentIds",
    	cu.id AS "company.primaryPerson.id",
    	cu.name AS "company.primaryPerson.name",
    	cu2.id AS "company.deputyPerson.id",
    	cu2.name AS "company.deputyPerson.name",
    	ou.id AS "office.primaryPerson.id",
    	ou.name AS "office.primaryPerson.name",
    	ou2.id AS "office.deputyPerson.id",
    	ou2.name AS "office.deputyPerson.name"
    	<!-- ,
        r.id AS "roleList.id",
        r.office_id AS "roleList.office.id",
        r.name AS "roleList.name",
        r.enname AS "roleList.enname",
        r.role_type AS "roleList.roleType",
        r.data_scope AS "roleList.dataScope" -->
    </sql>
    
    <sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = concat(a.company_id)
		LEFT JOIN sys_area ca ON ca.id = c.area_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN sys_area oa ON oa.id = o.area_id
		LEFT JOIN sys_user cu ON cu.id = c.primary_person
		LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person
		LEFT JOIN sys_user ou ON ou.id = o.primary_person
		LEFT JOIN sys_user ou2 ON ou2.id = o.deputy_person
		<!-- 
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
        LEFT JOIN sys_role r ON r.id = ur.role_id -->
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/>,
			
			(SELECT group_concat(T2.name) FROM ( 
			    SELECT 
			        @r AS _id, 
			        (SELECT @r := parent_id FROM trains.sys_office WHERE id = _id) AS parent_id
			    FROM 
			        (SELECT @r := (SELECT office_id FROM trains.sys_user WHERE id = #{id}) ) vars, 
			        trains.sys_office h WHERE @r >= 0) T1 JOIN trains.sys_office T2 ON T1._id = T2.id
			) AS parendNames
			<!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.login_name = #{loginName} 
	</select>
	<!-- 验证手机号码 -->
	<select id="getByMobile" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.mobile = #{mobile} 
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			a.id,
			a.login_name,
			a. NAME,
			a.phone,
			a.mobile,
			a.del_flag,
			CASE a.type 
			WHEN 'yg' THEN '员工'
			WHEN 'pt' THEN '普通会员'
			WHEN 'syr' THEN '手艺人用户'
			WHEN 'qy' THEN '企业员工' 
			ELSE '' END AS type, 	
			tm.mod_name AS modelName,
			CASE tmf.`status`
			WHEN 0 THEN '已授权'
			WHEN 1 THEN '已到期'
			ELSE '未授权' END AS userStatus,
			c. NAME AS "company.name",
			o. NAME AS "office.name"
		FROM
			sys_user a
		LEFT JOIN sys_franchisee c ON c.id = a.company_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN train_apply tap ON tap.user_id = a.id 
		LEFT JOIN train_model_franchisee tmf ON tmf.user_id = a.id
		LEFT JOIN train_model tm ON tm.id = tmf.mod_id
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<!-- 离职标识 -->
		<if test="parentDel == 0 or parentDel == 1">
			AND a.del_flag = #{parentDel }
		</if>
		<if test="company != null and company.id != null and company.id != ''">
			AND a.company_id = #{company.id} 
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE CONCAT('%,', #{office.id}, ',%'))
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like CONCAT('%', #{loginName}, '%')
		</if>
		<if test="name != null and name != ''">
			AND a.name like CONCAT('%', #{name}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND a.mobile = #{mobile}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  o.code,c.code, a.name
			</otherwise>
		</choose>
	</select>
	
	<!-- 分页查询美容师信息 -->
	<select id="newFindList" resultType="User">
		SELECT
			DISTINCT
			a.id,
			a.login_name,
			a. NAME,
			a.phone,
			a.mobile,
			a.del_flag,
			c. NAME AS "company.name",
			o. NAME AS "office.name",
			o.code AS a,
			c.code AS b
		FROM
			sys_user a
		RIGHT JOIN (SELECT user_id FROM trains.sys_user_role WHERE role_id = (SELECT id FROM trains.sys_role WHERE enname = 'pb' AND del_flag = 0)) ur ON a.id = ur.user_id
		LEFT JOIN sys_franchisee c ON c.id = a.company_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN train_user_skill us ON us.user_id = a.id
		<!-- LEFT JOIN train_skill_label sl ON sl.id = us.skill_id -->	
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<!-- 离职标识 -->
		<if test="parentDel == 0 or parentDel == 1">
			AND a.del_flag = #{parentDel }
		</if>
		<choose>
			<when test="office != null and office.id != null and office.id != ''">
				AND (o.id = #{office.id} OR o.parent_ids LIKE CONCAT('%,', #{office.id}, ',%'))
			</when>
			<otherwise>
				AND (o.id = #{company.id} OR o.parent_ids LIKE CONCAT('%,', #{company.id}, ',%'))
			</otherwise>
		</choose>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like CONCAT('%', #{loginName}, '%')
		</if>
		<if test="name != null and name != ''">
			AND a.name like CONCAT('%', #{name}, '%')
		</if>
		<if test="skill != null and skill.id != null and skill.id != ''">
			AND us.skill_id = #{skill.id}
		</if>
		AND a.del_flag = 0
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  o.code,c.code, a.name
			</otherwise>
		</choose>
	</select>
	
	<!-- 分页查询美容师信息 -->
	<select id="starBeautyFindUser" resultType="User">
		SELECT
			DISTINCT
			a.id,
			a.name,
			a.mobile,
			a.photo,
			o.id AS "office.id",
			o.parent_ids AS "office.parentIds",	
			o. NAME AS "office.name",
			o.code AS a,
			c.code AS b
		FROM
			sys_user a
		RIGHT JOIN (SELECT user_id FROM trains.sys_user_role WHERE role_id = (SELECT id FROM trains.sys_role WHERE enname = 'pb' AND del_flag = 0)) ur ON a.id = ur.user_id
		LEFT JOIN sys_franchisee c ON c.id = a.company_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN train_user_skill us ON us.user_id = a.id
		WHERE
			a.del_flag = 0
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE CONCAT('%,', #{office.id}, ',%'))
		</if>
		<if test="name != null and name != ''">
			AND a.name like CONCAT('%', #{name}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND a.mobile = #{mobile}
		</if>
		<if test="company.id != null and company.id != '' and company.id != 0">
			AND a.company_id = #{company.id}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  o.code,c.code, a.name
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据部门查询用户信息 -->
	<select id="findListByOffice" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>

		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND c.id = #{company.id} 
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND o.id = #{office.id} 
		</if>
		<if test="office == null">
			AND (o.id = ''  or o.id is null)
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- 排序 -->
		ORDER BY  a.name
	
	</select>
	
	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.name
	</select>
	<!-- 手机号验证 -->
	<select id="getUserByPhone" resultType="User">
		SELECT 
		  <include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE 
			1=1
			AND a.mobile = #{phone}
			AND a.del_flag = 0
	</select>
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>
	
	
	<!-- 验证员工号 -->
	<select id="getByNO" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.no = #{no} 
	</select>
	<!-- 验证身份证号码 -->
	<select id="getUserByIdCard" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.idcard = #{idCard}
	</select>
	<update id="userDeleteByidCard">
		UPDATE sys_user SET del_flag=1,del_remarks="导入excel模板删除" where idcard=#{idcard}
	</update>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id, 
			company_id, 
			office_id, 
			login_name, 
			password, 
			no,
			idcard,
			name,
			sex, 
			induction_time,
			email, 
			phone, 
			mobile, 
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			qrcode,
			del_flag,
			mtmy_user_id
		) VALUES (
			#{id}, 
			#{company.id}, 
			#{office.id}, 
			#{loginName}, 
			#{password}, 
			#{no},
			#{idCard},
			#{name},
			#{sex}, 
			#{inductionTime},
			#{email}, 
			#{phone}, 
			#{mobile}, 
			#{userType}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{qrCode},
			#{delFlag},
			#{mtmyUserId}
		)
	</insert>
	<!-- 增加操作日志 -->
	<insert id="saveUserLog">
		INSERT INTO sys_user_log(
			user_id,
			content,
			update_by, 
			update_date
		) VALUES (
			#{id}, 
			#{userLog.content},
			#{updateBy.id}, 
			#{updateDate}
		)
	</insert>
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET 
			company_id = #{company.id}, 
			office_id = #{office.id}, 
			login_name = #{loginName}, 
			password = #{password}, 
			no = #{no}, 
			idcard=#{idCard},
			name = #{name},
			sex = #{sex}, 
			induction_time=#{inductionTime},
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			user_type = #{userType}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			login_flag = #{loginFlag},
			photo = #{photo},
			qrcode = #{qrCode},
			del_flag = 0
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id} FROM dual
		</foreach>
	</insert>
	<select id="findRoleName" resultType="Role">
		SELECT name FROM sys_role where id = #{id}
	</select>
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET 
			name = #{name},
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo},
			qrcode = #{qrCode}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			del_flag = #{DEL_FLAG_DELETE},
			del_remarks = #{delRemarks }
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} = '${value}'
	</select>
	<!-- 添加好友 -->
	<insert id="insertFriend">
		INSERT INTO sys_user_friend(
			id, 
			userId, 
			friendId
		) VALUES (
			#{id}, 
			#{userId}, 
			#{friendId}
		)
	</insert>
	
	<!-- 根据用户id和好友id获取唯一记录 -->
	<select id="findFriend" resultType="User">
		SELECT
			*
		FROM sys_user a
		LEFT JOIN sys_user_friend p ON p.userId = a.id
		WHERE p.userId = #{userId} and p.friendId = #{friendId}
	</select>
	
	<!-- 删除好友 -->
	<select id="deleteFriend">
		DELETE FROM sys_user_friend  WHERE userId = #{userId} and friendId = #{friendId}
	</select>
	
		<!-- 查询我的好友列表 -->
	<select id="findFriends"  resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_friend p ON p.friendId = a.id
		WHERE  p.userId = #{id}
	</select>
	
		<!-- 根据条件检索用户，添加到好友列表 -->
	<select id="searchUsers"  resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
	  	<include refid="userJoins"/>
		<if test="name != null and name != ''">
			WHERE  a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>
	<!-- 查询用户前两条数据日志 -->
	<select id="findUserLog" resultType="UserLog">
		SELECT ul.content,ul.update_date AS updateDate,u.name
			FROM trains.`sys_user_log` as ul
			LEFT JOIN trains.sys_user u ON ul.update_by = u.id
			WHERE 1=1 AND ul.user_id = #{userId }
			ORDER BY ul.update_date desc
			LIMIT 2
	</select>
	<!-- 分页查询用户所有日志数据 -->
	<select id="findUserLogList" resultType="UserLog">
		SELECT ul.content,ul.update_date AS updateDate,u.name
			FROM trains.`sys_user_log` as ul
			LEFT JOIN trains.sys_user u ON ul.update_by = u.id
			WHERE 1=1 AND ul.user_id = #{userId }
			ORDER BY ul.update_date desc
	</select>
	
	<select id="queryUserOfficeCodes" resultType="UserOfficeCode">
		SELECT 
			o.id as officeid ,
			u.id as userid
		FROM sys_user u 
		LEFT JOIN sys_office o ON o.id = u.office_id
		WHERE o.id IS NOT NULL
	</select>
	
	<select id="queryUserAll" resultType="UserVo">
		SELECT id as userid,totle_score as totlescore,user_type as usertype FROM sys_user 
	</select>
	<update id="UpdateUserMoney">
		UPDATE sys_user SET
		user_money =user_money+#{usermoney}
		WHERE id = #{id}
	</update>
		<!-- 消费增加积分 -->
	<update id="UpdateUserPayPost">
		UPDATE sys_user SET
		gold=gold+#{gold}
		WHERE id = #{id}
	
	</update>
	<select id="findOaUser" resultType="User">
		SELECT
			a.id,
			a.login_name,
			a. NAME,
			a.phone,
			a.mobile,
			a.del_flag,
			c. NAME AS "company.name",
			o. NAME AS "office.name"
		FROM
			sys_user a
			
		LEFT JOIN sys_franchisee c ON c.id = a.company_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		RIGHT JOIN oa_user_cid AS oc ON a.id = oc.user_id 
		WHERE <!-- a.del_flag = #{DEL_FLAG_NORMAL} -->
		a.del_flag = #{parentDel }
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>
	<!-- 修改用户权限 -->
	<update id="UpdateDataScope">
		UPDATE sys_user SET 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			data_scope = #{dataScope}
		WHERE id = #{id}
	</update>
	<!-- 物理删除权限表 -->
	<delete id="deleteUserOffice">
		DELETE FROM sys_user_office WHERE user_id = #{id}
	</delete>
	<!-- 新增用户权限 -->
	<insert id="insertDataScope">
		INSERT INTO sys_user_office(user_id, office_id)
		<foreach collection="officeList" item="office" separator=" union all ">
			SELECT #{id}, #{office.id} FROM dual
		</foreach>
	</insert>
	<!-- 查询用户权限 -->
	<select id="findAuth" resultMap="userAuthRreult">
		SELECT 
			user_id,
			office_id AS "officeList.id"
		FROM 
			sys_user_office
			WHERE user_id = #{id}
	</select>
	<!-- 查询用户商家权限 -->
	<select id="findFranchiseeAuth" resultType="map">
		SELECT
			GROUP_CONCAT(a.company_id) AS companyIds,
			GROUP_CONCAT(b.`name`) AS companyNames
		FROM 
			sys_user_company a
			LEFT JOIN sys_franchisee b ON a.company_id = b.id
		WHERE 
			a.user_id  = #{id}
	</select>
	<!-- 通过角色查看用户 -->
	<select id="findRoleUser" resultType="User">
		SELECT
			a.id,
			a.login_name,
			a. NAME,
			a.phone,
			a.mobile,
			a.del_flag,
			c. NAME AS "company.name",
			o. NAME AS "office.name",
			r.role_id AS "role.id"
		FROM
			trains.sys_user_role r
			LEFT JOIN trains.sys_user a ON a.id = r.user_id
			LEFT JOIN sys_franchisee c ON c.id = a.company_id
			LEFT JOIN sys_office o ON o.id = a.office_id
			${sqlMap.dsf}
			AND a.del_flag = 0
			AND r.role_id = #{role.id}
			ORDER BY  o.code,c.code, a.name
	</select>
	<!-- 验证导入的用户的工号是否已经存在 -->
	<select id="selectNo" resultType="Integer">
		SELECT COUNT(*)
		FROM sys_user
		WHERE no = #{no}
	</select>
	
	<!-- 验证用户是否为特殊美容师 -->
	<select id="selectSpecBeautician" resultType="Integer">
		SELECT COUNT(*)
		FROM trains.train_special_beautician
		WHERE user_id = #{userId}
		AND del_flag = 0
	</select>
	
	<!-- 修改用户状态 -->
	<update id="UpdateUserStatus">
		UPDATE sys_user SET 
			status = 1
		WHERE id = #{id}
	</update>
	
	<!-- 是否推荐 -->
	<update id="updateStatus">
		UPDATE sys_user 
		SET 
			<if test="isRecommend != null and isRecommend != ''">
				is_recommend = #{isRecommend}
			</if>
		WHERE id = #{id}
	</update>
	
	<!-- 查询user_info中是否存在相应的数据 -->
	<select id="selectIsExist" resultType="Integer">
		SELECT COUNT(*) FROM sys_user_info WHERE user_id = #{id}
	</select>
	
	<!-- 当为原来不是排班角色，后来改为排班角色，但是user_info中没有信息时，新增美容师的信息 -->
	<insert id="insertUserInfo">
		INSERT INTO sys_user_info(
			id,
			user_id,
			create_time
		)VALUES(
			#{uuid},
			#{id},
			NOW()
		)
	</insert>
	
	<!-- 物理删除商家权限表 -->
	<delete id="deleteFranchiseeAuth">
		DELETE FROM sys_user_company WHERE user_id = #{id}
	</delete>
	<!-- 新增用户商家权限 -->
	<insert id="insertFranchiseeAuth">
		INSERT INTO sys_user_company(
			user_id,
			company_id
		)VALUES(
			#{userId},
			#{id}
		)
	</insert>

	<!-- 保存用户的角色返回主键id -->
	<insert id="saveFzxRoleByUser" parameterType="user" useGeneratedKeys="true" keyProperty="returnId">
		INSERT INTO fzx_user_role(
			user_id,
			fzx_role_id
		) VALUES(
			#{id},
			#{fzxRole.roleId}
		)
	</insert>
	<!-- 保存用户权限 -->
	<insert id="saveOfficeById">
		INSERT INTO fzx_user_role_office(
			u_r_id,
			office_id
		) VALUES(
			#{id},
			#{offId}
		)
	</insert>
	<!-- 根据用户id以及角色id查询 -->
	<select id="findIdByUserFzxRoleId" resultType="Integer">
		SELECT 
			id
		FROM fzx_user_role 
		WHERE 
			user_id = #{userId} 
		AND 
			fzx_role_id = #{roleId}
	</select>
	<!-- 删除权限 -->
	<delete id="deleteOfficeById">
		DELETE FROM fzx_user_role_office WHERE u_r_id = #{id}
	</delete>
	<!-- 删除用户的指定角色 -->
	<delete id="deleteFzxRoleByUser">
		DELETE FROM fzx_user_role WHERE user_id = #{userId} AND fzx_role_id = #{roleId}
	</delete>
	
	<select id="findOfficeListById" resultType="String">
		SELECT 
			GROUP_CONCAT(o.id)
		FROM 
			sys_office o 
		LEFT JOIN 
			fzx_user_role_office uro 
		ON 
			o.id = uro.office_id 
		WHERE uro.u_r_id = #{id}
	</select>
	
	<insert id="updateOfficeById">
		INSERT INTO fzx_user_role_office(
			u_r_id,
			office_id
		)VALUES(
			#{id},
			#{ofId}
		)
	</insert>

	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUsersByOfficeId" resultType="User">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		LEFT JOIN sys_office o ON o.id = a.office_id
		WHERE a.del_flag = '0'
		AND (o.id = #{office.id} OR o.parent_ids LIKE CONCAT('%,', #{office.id}, ',%'))
		ORDER BY a.name
	</select>
	
	<!-- 分享营业额查询提成人员信息 -->
	<select id="querySysUser" resultType="User">
		SELECT 
			u.id,
			u.name,
			(SELECT d.label FROM trains.sys_dict d WHERE d.value = u.user_type AND d.type='sys_user_type') AS 'positonName',
			IFNULL((SELECT de.name FROM trains.train_department de LEFT JOIN trains.train_department_position p ON p.department_id = de.id WHERE p.position_key = u.user_type AND u.company_id = de.office_id),'') AS 'departmentName',
			(SELECT de.id FROM trains.train_department de LEFT JOIN trains.train_department_position p ON p.department_id = de.id WHERE p.position_key = u.user_type AND u.company_id = de.office_id) AS 'departmentId',
			(SELECT o.name FROM trains.sys_office o WHERE o.id = u.office_id) AS 'officeName',
			u.mobile
		FROM trains.sys_user u
		WHERE u.del_flag = '0'
		<if test="name != '' and name != null">
			AND u.name like CONCAT('%', #{name}, '%')
		</if>
		<if test="id != '' and id != null">
			AND u.id = #{id}
		</if>
	</select>
	<select id="getUserPuTo" resultType="UserPuTo" >
		SELECT
			u.`name` AS memName,
			u.nickname AS memNickName,
			u.type AS memType,
			'' AS weiXin,
			'' AS weibo,
			'' AS memLevel,
			'' AS QQ,
			'' AS lastFee,
			u.mobile AS memMobile,
			u.create_date AS regisTime,
			l.NAME AS lesson,
			'' AS attention,
			'' AS scan,
			'' AS fans,
			liv.title AS video,
			'' AS articleComment,
			'' AS score,
			art.title AS article,
			'' AS answers,
			'' AS praise,
			'' AS goods,
			'' AS totalFee,
			'' AS yesterdayFee,
			'' AS sevenFee,
			COUNT(ord.order_id) AS totalOrderFund,
			SUM(ord.amount) AS totalOrderNum,
			'' AS goodsOrderNum,
			'' AS goodsOrderFund
		FROM
			sys_user u
		LEFT JOIN train_lesson_favorites lf ON lf.user_id = u.id
		LEFT JOIN train_lessons l ON l.lesson_id = lf.lesson_id
		LEFT JOIN train_live_audit liv ON liv.userId = u.id
		LEFT JOIN train_articles_favorites af ON af.user_id = u.id
		LEFT JOIN train_articles art ON art.id = af.article_id
		LEFT JOIN train_order ord ON ord.user_id = u.id
		WHERE u.del_flag = '0' 
			AND u.id = #{id}
		<!-- <if test="id != '' and id != null">
		'223ac0e7317746fb94c6498e7e647ff1'
		</if> -->
		AND liv.audit_status = 3
	</select>
</mapper>