<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.sys.dao.AreaDao">
    
	<sql id="areaColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.code,
		a.name,
		a.sort,
		a.type,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		p.name AS "parent.name"
	</sql>
	
	<sql id="areaJoins">
		<!-- LEFT JOIN sys_office p ON p.id = a.parent_id -->
		LEFT JOIN sys_area p ON p.id = a.parent_id
    </sql>
    
	<select id="get" resultType="Area">
		SELECT
			<include refid="areaColumns"/>
		FROM sys_area a
		<include refid="areaJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="selectByXid" resultType="Area">
		SELECT 
			a.id as "Pid",
			a.name as "Pname",
			b.id as "Cid",
			b.`name` as "Cname",
			c.id as "Xid",
			c.`name` as "Xname"
			FROM 
			sys_area a
			RIGHT  JOIN sys_area b ON a.id=b.parent_id
			RIGHT JOIN sys_area c ON b.id=c.parent_id
		WHERE c.id=#{id}
	</select>
	<select id="findList" resultType="Area">
		SELECT
			<include refid="areaColumns"/>
		FROM sys_area a
		<include refid="areaJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.area.id}
		ORDER BY a.code
	</select>
	
	<select id="findAllList" resultType="Area">
		SELECT
			<include refid="areaColumns"/>
		FROM sys_area a
		<include refid="areaJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>
	
	<select id="findListByPID" resultType="Area">
		SELECT
			<include refid="areaColumns"/>
		FROM sys_area a
		<include refid="areaJoins"/>
		WHERE a.del_flag = 0
		AND a.parent_id=#{ pid }
		ORDER BY a.code
	</select>
	<!-- 查询类型小于3的area  最小市 -->
	<select id="findAreaByType" resultType="Area">
		SELECT
			<include refid="areaColumns"/>
		FROM sys_area a
			<include refid="areaJoins"/>
		WHERE 
			a.del_flag = 0
			AND a.type <![CDATA[ <= ]]> #{type}
			ORDER BY a.code
	</select>
	<select id="findByParentIdsLike" resultType="Area">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM sys_area a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
			<if test="parentIds != null and  parentIds != ''">
				AND a.parent_ids LIKE #{parentIds}
			</if>
		ORDER BY a.code
	</select>
	
	<!-- 查询所有数据 -->
	<select id="findAreaByParentIdsLike" resultType="Area">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.CODE,
			a.NAME,
			a.type,
			a.remarks,
		    (SELECT COUNT(1) FROM sys_area b WHERE b.parent_id = a.id AND b.del_flag = 0) AS 'childrenNum'
		FROM sys_area a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
			<if test="parentIds == null or parentIds == '%%'">
				AND a.type in (1,2)
			</if>
			<if test="parentIds != null and parentIds != '%%'">
				AND a.parent_ids LIKE #{parentIds} 
				<if test="id != null and  id != ''">
					or a.id=#{id } 
				</if>
			</if>
		ORDER BY a.code
	</select>
	
	<!-- 根据父类id查询子类数据 用于异步加载树形table -->
	<select id="findByPidforChild" resultType="Area">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.CODE,
			a.NAME,
			a.type,
		  	(SELECT label FROM sys_dict WHERE type = 'sys_area_type' AND del_flag = 0 AND value = a.type) AS 'typeName',
			a.remarks,
		  (SELECT COUNT(1) FROM sys_area b WHERE b.parent_id = a.id AND b.del_flag = 0) AS 'childrenNum'
		FROM
			sys_area a
		WHERE a.del_flag = 0
			AND a.parent_id = #{id} 
		ORDER BY a.CODE
	</select>
	
	<!-- 保存q -->
	<insert id="insert">
		INSERT INTO sys_area(
			id, 
			parent_id, 
			parent_ids, 
			code, 
			name, 
			sort,
			type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{code}, 
			#{name}, 
			#{sort}, 
			#{type}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_area SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			code = #{code}, 
			name = #{name}, 
			sort = #{sort}, 
			type = #{type}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_area SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM sys_area 
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<update id="deleteByLogic">
		UPDATE sys_area SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
</mapper>