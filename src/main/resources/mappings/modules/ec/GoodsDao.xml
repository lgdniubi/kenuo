<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.modules.ec.dao.GoodsDao">
	
	<sql id="goodsColumns">
		  g.goods_id AS 'goodsId',
		  g.category_id AS 'goodsCategoryId',
		  g.franchisee_id AS 'franchiseeId',
		  g.goodsbrand_id AS 'goodsBrandId',
		  g.category_id AS 'goodsCategory.id',
		  g.franchisee_id AS 'franchisee.id',
		  g.goodsbrand_id AS 'goodsBrand.id',
		  g.position_id AS 'positionId',
		  g.position_ids AS 'positionIds',
		  c.name AS 'goodsCategory.name',
  		  f.name AS 'franchisee.name',
		  g.goods_sn AS 'goodsSn',
		  g.goods_short_name AS 'goodsShortName',
		  g.goods_description AS 'goodsDescription',
		  g.goods_key AS 'goodsKey',
		  g.goods_name AS 'goodsName',
		  g.total_store AS 'totalStore',
		  g.store_count AS 'storeCount',
		  g.weight,
		  g.market_price AS 'marketPrice',
		  g.shop_price AS 'shopPrice',
		  g.cost_price AS 'costPrice',
		  g.goods_tags AS 'goodsTags',
		  g.keywords AS 'keywords',
		  g.goods_remark AS 'goodsRemark',
		  g.goods_content AS 'goodsContent',
		  g.original_img AS 'originalImg',
		  g.is_real AS 'isReal',
		  g.is_on_sale AS 'isOnSale',
		  g.is_free_shipping AS 'isFreeShipping',
		  g.sort,
		  g.is_recommend AS 'isRecommend',
		  g.is_new AS 'isNew',
		  g.is_hot AS 'isHot',
		  g.is_appshow AS 'isAppshow',
		  g.attr_type AS 'attrType',
		  g.spec_type AS 'specType',
		  g.give_integral AS 'giveIntegral',
		  g.integral AS 'integral',
		  g.sales_sum AS 'salesSum',
		  g.region_name AS 'regionName',
		  g.region_id AS 'regionId',
		  g.action_type AS 'actionType',
		  g.action_id AS 'actionId',
		  g.service_min AS 'serviceMin',
		  g.goods_type AS 'goodsType',
		  g.advance_price AS 'advancePrice',
		  g.supplier_id AS 'supplierId',
		  g.is_open AS 'goodsIsOpen'
	</sql>
	
	<sql id="goodsJoins">
		LEFT JOIN mtmydb.mtmy_goods_category c ON c.category_id = g.category_id
  		LEFT JOIN trains.sys_franchisee f ON f.id = g.franchisee_id
    </sql>
	
	<!-- 分页查询数据 -->
	<select id="findList" resultType="Goods">
		SELECT 
		  g.goods_id AS 'goodsId',
		  g.goods_name AS 'goodsName',
		  g.goods_sn AS 'goodsSn',
		  c.name AS 'goodsCategory.name',
		  g.shop_price AS 'shopPrice',
		  g.total_store AS 'totalStore',
		  g.store_count AS 'storeCount',
		  g.is_on_sale  AS 'isOnSale',
		  g.is_recommend AS 'isRecommend',
		  g.is_new AS 'isNew',
		  g.is_hot AS 'isHot',
		  g.is_appshow AS 'isAppshow',
		  g.is_real AS 'isReal',
		  g.sort,
		  g.action_id as "actionId",
		  b.action_name as "actionName",
		  g.is_open as "goodsIsOpen"
		FROM
		  mtmydb.mtmy_goods g 
		  LEFT JOIN mtmydb.mtmy_goods_category c 
		    ON c.category_id = g.category_id 
		  LEFT JOIN mtmydb.mtmy_action_info b ON b.action_id=g.action_id
		WHERE 1 = 1
			<if test="actionId !=null and actionId !=''">
				AND g.action_id=#{actionId}
			</if>
			<if test="goodsCategoryId != null and goodsCategoryId != ''">
				AND g.category_id = #{goodsCategoryId}
			</if>
			<if test="goodsBrandId != null and goodsBrandId != '' and goodsBrandId != '-1'">
				AND g.goodsbrand_id = #{goodsBrandId}
			</if>
			<if test="isOnSale != null and isOnSale != '' and isOnSale != '-1'">
				AND g.is_on_sale = #{isOnSale}
			</if>
			<if test="isNew != null and isNew != '' and isNew != '-1'">
				AND g.is_new = #{isNew}
			</if>
			<if test="isRecommend != null and isRecommend != '' and isRecommend != '-1'">
				AND g.is_recommend = #{isRecommend}
			</if>
			<if test="isHot != null and isHot != '' and isHot != '-1'">
				AND g.is_hot = #{isHot}
			</if>
			<if test="isAppshow != null and isAppshow != '' and isAppshow != '-1'">
				AND g.is_appshow = #{isAppshow}
			</if>
			<if test="isReal != null and isReal != '' and isReal != '-1'">
				AND g.is_real = #{isReal}
			</if>
			<if test="querytext != null and querytext != ''">
				AND (g.goods_name LIKE CONCAT('%', #{querytext}, '%') OR g.keywords LIKE CONCAT('%', #{querytext}, '%'))
			</if>
			<if test="whetherRatio != null and whetherRatio != ''">
				<if test="whetherRatio == 0">
					AND g.goods_id NOT IN (select d.goods_id from mtmydb.mtmy_goods_price_ratio_details d where d.goods_id = g.goods_id and d.del_flag = 0)
				</if>
				<if test="whetherRatio == 1">
					<choose>
						<when test="newRatio != null and newRatio != ''">
							AND g.goods_id IN (select d.goods_id from mtmydb.mtmy_goods_price_ratio_details d where d.goods_id = g.goods_id and d.del_flag = 0 and d.ratio >= #{minRatio} <![CDATA[AND d.ratio <= #{maxRatio}]]>)
						</when>
						<otherwise>
							AND g.goods_id IN (select d.goods_id from mtmydb.mtmy_goods_price_ratio_details d where d.goods_id = g.goods_id and d.del_flag = 0)
						</otherwise>
					</choose>
				</if>
			</if>
			AND g.del_flag = 0 
			ORDER BY g.sort DESC 
	</select>
	
	<!-- 根据商品id，查询商品信息 -->
	<select id="get" resultType="Goods">
		SELECT 
		  <include refid="goodsColumns"/>,
		  s.name AS supplierName,
		 (CASE WHEN
		  	(select count(*) from mtmydb.mtmy_goods_price_ratio_details where goods_id = #{goodsId} and del_flag = 0) > 0 THEN 1 ELSE 0 END
		  )AS 'isRatio'
		FROM
		  mtmydb.mtmy_goods g
		  <include refid="goodsJoins"/> 
		  LEFT JOIN mtmydb.mtmy_goods_supplier s ON g.supplier_id = s.id
		WHERE g.del_flag = 0 
		  AND g.goods_id = #{goodsId} 
	</select>
	<!-- 根据活动id，查询商品信息 -->
	<select id="ActionGoodslist" resultType="Goods">
		SELECT 
		  <include refid="goodsColumns"/>
		FROM
		  mtmydb.mtmy_goods g
		  <include refid="goodsJoins"/> 
		WHERE g.del_flag = 0 
		  AND g.action_id = #{actionId}
	</select>
	
	<!-- 根据分类，查询商品信息 -->
	<select id="findAllList" resultType="Goods">
		SELECT 
		  <include refid="goodsColumns"/>
		FROM
		  mtmydb.mtmy_goods g
		  <include refid="goodsJoins"/> 
		WHERE g.del_flag = 0 
		  
	</select>
	<!-- 根据分类查询集合 -->
	<select id="goodslist"  resultType="Goods">
		SELECT 
		  <include refid="goodsColumns"/>
		FROM
		  mtmydb.mtmy_goods g
		  <include refid="goodsJoins"/> 
		WHERE g.del_flag = 0 
		<if test="actionId !=null and actionId !=''">
			AND g.action_id=0
		</if>
		<if test="franchiseeId !=null and franchiseeId !=''">
			AND g.franchisee_id=#{franchiseeId}
		</if>
		<if test="goodsBrandId !=null and goodsBrandId !=''">
			AND g.goodsbrand_id=#{goodsBrandId}
		</if>
		<if test="goodsCategoryId != null and goodsCategoryId != '' and goodsCategoryId != 0">
			AND g.category_id=#{goodsCategoryId} 
		</if>
		<if test="actionType !=null and actionType != ''">
			AND g.action_type=#{actionType}
		</if>
		<if test="goodsName !=null and goodsName!=''">
			AND (g.goods_name like 
			<if test="dbName == 'oracle'">'%'||#{goodsName} ||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{goodsName} , '%')</if>
			OR g.goods_id = #{goodsName})
		</if>
		<if test="isReal !=null and isReal!=''">
			AND g.is_real = #{isReal}
		</if>
		<if test="isOnSale != null and isOnSale != ''">
			AND g.is_on_sale = #{isOnSale}
		</if>
		<if test="isAppshow != null and isAppshow != ''">
			AND g.is_appshow = #{isAppshow}
		</if>
		<if test="goodsId != 0">
			AND g.goods_id = #{goodsId}
		</if>
		<if test="openFlag != null and openFlag != ''">
			AND g.is_open = #{openFlag}
		</if>
		<if test="franchiseeIdsList != null and franchiseeIdsList != '' and franchiseeIdsList.size() > 0">
			AND g.franchisee_id IN  
       		<foreach collection="franchiseeIdsList" item="item" index="index" open="(" separator="," close=")">  
            	#{item}  
        	</foreach> 
		</if>
	</select>
	<!-- 根据多个分类查询上商品 -->
	<select id="findByCateList" resultType="Goods">
		SELECT
			<include refid="goodsColumns"/>
		FROM
			mtmydb.mtmy_goods g
			<include refid="goodsJoins"/> 
		WHERE g.del_flag = 0  AND g.category_id in (#{cateId})

	</select>
	<!-- 通过商品ID查询卡项中需要数据 -->
	<select id="findGoodsBygoodsId" resultType="Goods">
		SELECT
			g.goods_id AS 'goodsId',
			g.goods_name AS 'goodsName',
			g.original_img AS 'originalImg',
			g.service_min AS 'serviceMin',
			g.is_real AS 'isReal',
			g.is_open AS 'goodsIsOpen'
		FROM
			mtmydb.mtmy_goods g
		WHERE g.del_flag = 0  AND g.goods_id = #{goodsId}
	</select>
	
	<!-- 根据商品id，查询商品信息 -->
	<select id="getgoods" resultType="Goods">
		SELECT 
		  g.goods_id AS 'goodsId',
		  g.goods_sn AS 'goodsSn',
		  g.goods_key AS 'goodsKey',
		  g.goods_name AS 'goodsName',
		  g.store_count AS 'storeCount',
		  g.weight,
		  g.market_price AS 'marketPrice',
		  g.shop_price AS 'shopPrice',
		  g.cost_price AS 'costPrice',
		  g.goods_tags AS 'goodsTags',
		  g.keywords AS 'keywords',
		  g.goods_remark AS 'goodsRemark',
		  g.goods_content AS 'goodsContent',
		  g.original_img AS 'originalImg',
		  g.is_real AS 'isReal',
		  g.is_on_sale AS 'isOnSale',
		  g.is_free_shipping AS 'isFreeShipping',
		  g.sort,
		  g.is_recommend AS 'isRecommend',
		  g.is_new AS 'isNew',
		  g.is_hot AS 'isHot',
		  g.is_appshow AS 'isAppshow',
		  g.attr_type AS 'attrType',
		  g.spec_type AS 'specType',
		  g.give_integral AS 'giveIntegral',
		  g.integral AS 'integral',
		  g.sales_sum AS 'salesSum',
		  g.region_name AS 'regionName',
		  g.region_id AS 'regionId',
		  g.service_min AS 'serviceMin',
		  g.is_open AS 'goodsIsOpen'
		FROM
		  mtmydb.mtmy_goods g
		 
		WHERE g.del_flag = 0 
		  AND g.goods_id = #{id} 
	</select>
	
	<!-- 保存-商品通用信息 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="goodsId">
		INSERT INTO mtmydb.mtmy_goods (
		  category_id,
		  franchisee_id,
		  goodsbrand_id,
		  <if test="positionId != null and positionId != ''">
		 	 position_id,
		  	 position_ids,
		  </if>
		  goods_sn,
		  goods_short_name,
		  goods_description,
		  goods_key,
		  goods_name,
		  weight,
		  market_price,
		  shop_price,
		  cost_price,
		  goods_tags,
		  keywords,
		  goods_remark,
		  goods_content,
		  original_img,
		  is_real,
		  is_on_sale,
		  is_free_shipping,
		  sort,
		  is_recommend,
		  is_new,
		  is_hot,
		  is_appshow, 
		  attr_type,
		  spec_type,
		  give_integral,
		  integral,
		  sales_sum,
		  region_name,
		  region_id,
		  action_type,
		  action_id,
		  service_min,
		  on_time,
		  last_update,
		  goods_type,
		  advance_price,
		  supplier_id,
		  is_open
		) 
		VALUES
		  ( #{goodsCategoryId},
		    #{franchiseeId},
		    #{goodsBrandId},
		    <if test="positionId != null and positionId != ''">
		    	#{positionId},
		   	 	#{positionIds},
		    </if>
		    #{goodsSn},
		    #{goodsShortName},
		    #{goodsDescription},
		    #{goodsKey},
		    #{goodsName},
		    #{weight},
		    #{marketPrice},
		    #{shopPrice},
		    #{costPrice},
		    #{goodsTags},
		    #{keywords},
		    #{goodsRemark},
		    #{goodsContent},
		    #{originalImg},
		    #{isReal},
		    #{isOnSale},
		    #{isFreeShipping},
		    #{sort},
		    #{isRecommend},
		    #{isNew},
		    #{isHot},
		    #{isAppshow},
		    #{attrType},
		    #{specType},
		    #{giveIntegral},
		    #{integral},
		    #{salesSum},
		    #{regionName},
		    #{regionId},
		    #{actionType},
		    #{actionId},
		    #{serviceMin},
		    SYSDATE(),
		    SYSDATE(),
		    #{goodsType},
		    #{advancePrice},
		    #{supplierId},
		    #{goodsIsOpen}
		  )
	</insert>
	
	<!-- 修改-商品通用信息 -->
	<update id="update">
		UPDATE mtmydb.mtmy_goods
			SET 
			  category_id = #{goodsCategoryId},
			  franchisee_id = #{franchiseeId},
			  goodsbrand_id = #{goodsBrandId},
			  <if test="positionId != null and positionId != ''">
			  	position_id = #{positionId},
			  	position_ids = #{positionIds},
			  </if>
			  goods_sn = #{goodsSn},
			  goods_short_name = #{goodsShortName},
			  goods_description = #{goodsDescription},
			  goods_key = #{goodsKey},
			  goods_name = #{goodsName},
			  weight = #{weight},
			  market_price = #{marketPrice},
			  shop_price = #{shopPrice},
			  cost_price = #{costPrice},
			  goods_tags = #{goodsTags},
			  keywords = #{keywords},
			  goods_remark = #{goodsRemark},
			  goods_content = #{goodsContent},
			  original_img = #{originalImg},
			  is_real = #{isReal},
			  is_on_sale = #{isOnSale},
			  is_free_shipping = #{isFreeShipping},
			  sort = #{sort},
			  is_recommend = #{isRecommend},
			  is_new = #{isNew},
			  is_hot = #{isHot},
			  is_appshow = #{isAppshow},
			  attr_type = #{attrType},
			  spec_type = #{specType},
			  give_integral = #{giveIntegral},
			  integral = #{integral},
			  sales_sum = #{salesSum},
			  region_name = #{regionName},
			  region_id = #{regionId},
			  service_min = #{serviceMin},
			  action_type = #{actionType},
			  last_update = SYSDATE(),
			  goods_type = #{goodsType},
		      advance_price = #{advancePrice},
			  supplier_id = #{supplierId},
			  is_open = #{goodsIsOpen}
			WHERE del_flag = 0 AND goods_id = #{goodsId}
	</update>
	<update id="updateTotalstore">
		UPDATE mtmydb.mtmy_goods
			SET total_store=0
		WHERE del_flag = 0 AND goods_id = #{goodsId}	
	</update>
	<!-- 更新库存 -->
	<update id="updateStorCount">
		UPDATE mtmydb.mtmy_goods SET
			 total_store = #{totalStore},
			 store_count = #{storeCount}
		WHERE del_flag = 0 AND goods_id = #{goodsId}	 
	</update>
	<!-- 逻辑删除-商品 -->
	<delete id="deleteByLogic">
		UPDATE mtmydb.mtmy_goods
			SET 
			  del_flag = 1
			WHERE del_flag = 0 AND goods_id = #{goodsId}	
	</delete>
	
	<!-- 修改商品类型（规格与属性的类型） -->
	<update id="updategoodstype">
		UPDATE mtmydb.mtmy_goods
			SET 
			  attr_type = #{attrType},
			  spec_type = #{specType},
			  last_update = SYSDATE()
			WHERE del_flag = 0 AND goods_id = #{goodsId}
	</update>
	
	<!-- 保存商品相册 -->
	<insert id="savegoodsimages">
		INSERT INTO mtmydb.mtmy_goods_images
            (goods_id,
             image_url,
             image_type,
             image_desc,
             sort)
		<foreach collection="goodsImagesList" item="goodsImages" separator=" union all ">
			SELECT  #{goodsImages.goodsId}, 
					#{goodsImages.imageUrl}, 
					#{goodsImages.imageType}, 
					#{goodsImages.imageDesc}, 
					#{goodsImages.sort}
			FROM dual
		</foreach>
	</insert>
	
	<!-- 删除商品相册 -->
	<delete id="deletegoodsimages">
		DELETE
			FROM mtmydb.mtmy_goods_images
		WHERE image_type = #{imageType} AND goods_id = #{goodsId}
	</delete>
	
	<!-- 保存商品规格项 -->
	<insert id="savespec">
		INSERT INTO mtmydb.mtmy_spec_goods_price
            (goods_id,
             spec_key,
             spec_key_name,
             spec_key_value,
             price,
             market_price,
             cost_price,
             cargo_price,
             purchase_price,
             store_count,
             bar_code,
             goods_no,
             suplier_goods_no,
             goods_weight,
             service_times,
             expiring_date)
		<foreach collection="goodsSpecPricesList" item="goodsSpecPrice" separator=" union all ">
			SELECT  #{goodsSpecPrice.goodsId}, 
					#{goodsSpecPrice.specKey}, 
					#{goodsSpecPrice.specKeyName},
					#{goodsSpecPrice.specKeyValue}, 
					#{goodsSpecPrice.price}, 
					#{goodsSpecPrice.marketPrice}, 
					#{goodsSpecPrice.costPrice}, 
					#{goodsSpecPrice.cargoPrice}, 
					#{goodsSpecPrice.purchasePrice}, 
					#{goodsSpecPrice.storeCount}, 
					#{goodsSpecPrice.barCode}, 
					#{goodsSpecPrice.goodsNo},
					#{goodsSpecPrice.suplierGoodsNo},
					#{goodsSpecPrice.goodsWeight},
					#{goodsSpecPrice.serviceTimes},
					#{goodsSpecPrice.expiringDate}
			FROM dual
		</foreach>
	</insert>
	
	<!-- 删除商品规格 -->
	<delete id="deletespec">
		DELETE
			FROM mtmydb.mtmy_spec_goods_price
		WHERE goods_id = #{goodsId}
	</delete>
	<!-- 逻辑删除商品规格 -->
	<update id="updatespec">
		UPDATE  mtmydb.mtmy_spec_goods_price
			SET del_flag = 1
		WHERE goods_id = #{goodsId}
	</update>
	
	<!-- 保存保存商品属性 -->
	<insert id="saveattribute">
		INSERT INTO mtmydb.mtmy_goods_attribute_mappings (
		  attr_id,
		  goods_id,
		  attr_value) 
		<foreach collection="goodsAttributeMappingsList" item="goodsAttributeMappings" separator=" union all ">
			SELECT  #{goodsAttributeMappings.attrId}, 
					#{goodsAttributeMappings.goodsId}, 
					#{goodsAttributeMappings.attrValue}
			FROM dual
		</foreach>
	</insert>
	
	<!-- 删除商品类型（规格、属性） -->
	<delete id="deleteattribute">
		DELETE
			FROM mtmydb.mtmy_goods_attribute_mappings
		WHERE goods_id = #{goodsId}
	</delete>
	
	<!-- 商品-是否显示（上架、推荐、新品、热卖、app显示） -->
	<update id="updateisyesno">
		UPDATE mtmydb.mtmy_goods
			SET 
			  <if test="isOnSale != null and isOnSale != ''">
				is_on_sale = #{isOnSale},
			  </if>
			  <if test="isRecommend != null and isRecommend != ''">
				is_recommend = #{isRecommend},
			  </if>
			  <if test="isNew != null and isNew != ''">
				is_new = #{isNew},
			  </if>
			  <if test="isHot != null and isHot != ''">
				is_hot = #{isHot},
			  </if>
			   <if test="isAppshow != null and isAppshow != ''">
				is_appshow = #{isAppshow},
			  </if>
			  last_update = SYSDATE()
			WHERE del_flag = 0 AND goods_id = #{goodsId}
	</update>
	
	<!-- 根据商品ID，查询商品图片 -->
	<select id="findGoodsImages" resultType="GoodsImages">
		SELECT 
		  img_id AS 'imgId',
		  goods_id AS 'goodsId',
		  image_url AS 'imageUrl',
		  image_type AS 'imageType',
		  image_desc AS 'imageDesc',
		  sort 
		FROM
		  mtmydb.mtmy_goods_images
		WHERE goods_id = #{goodsId}
			ORDER BY sort
	</select>
	
	<!-- 根据商品ID，查询商品规格价格项 -->
	<select id="findGoodsSpecPrice" resultType="GoodsSpecPrice">
		SELECT 
		  goods_id AS 'goodsId',
		  spec_key AS 'specKey',
		  spec_key_name AS 'specKeyName',
		  spec_key_value AS 'specKeyValue',
		  price,
		  market_price AS 'marketPrice',
		  cost_price AS 'costPrice',
		  cargo_price AS cargoPrice,
		  purchase_price AS purchasePrice,
		  store_count AS 'storeCount',
		  bar_code AS 'barCode',
		  goods_no AS 'goodsNo',
		  suplier_goods_no AS 'suplierGoodsNo',
		  service_times AS 'serviceTimes',
		  expiring_date AS 'expiringDate',
		  goods_weight  AS 'goodsWeight'
		FROM
		  mtmydb.mtmy_spec_goods_price 
		WHERE goods_id = #{goodsId} AND del_flag = 0
	</select>
	
	<!-- 根据商品规格specKey，查询商品规格价格 -->
	<select id="findByGoodsSpecPrice" resultType="GoodsSpecPrice">
		SELECT 
		  goods_id AS 'goodsId',
		  spec_key AS 'specKey',
		  spec_key_value AS 'specKeyValue',
		  price,
		  market_price AS 'marketPrice',
		  cost_price AS 'costPrice',
		  cargo_price AS cargoPrice,
		  purchase_price AS purchasePrice,
		  store_count AS 'storeCount',
		  bar_code AS 'barCode',
		  goods_no AS 'goodsNo',
		  suplier_goods_no AS 'suplierGoodsNo',
		  service_times AS 'serviceTimes',
		  expiring_date AS 'expiringDate',
		  goods_weight  AS 'goodsWeight'
		FROM
		  mtmydb.mtmy_spec_goods_price 
		WHERE spec_key = #{specKey}
		AND goods_id = #{goodsId}
		AND del_flag = 0
	</select>
	
	<!-- 商品规格specKey，修改商品规格价格 -->
	<update id="updateByGoodsSpecPrice">
		UPDATE mtmydb.mtmy_spec_goods_price
			SET 
			 price = #{price},
			 bar_code = #{barCode},
			 goods_no = #{goodsNo},
			 suplier_goods_no = #{suplierGoodsNo},
			 service_times = #{serviceTimes},
			 expiring_date = #{expiringDate},
			 cost_price = #{costPrice},
			 market_price = #{marketPrice},
			 cargo_price = #{cargoPrice},
			 purchase_price = #{purchasePrice},
			 goods_weight  = #{goodsWeight}
		WHERE spec_key = #{specKey}
		AND goods_id = #{goodsId}
		AND del_flag =0
	</update>
	
	<!-- 根据商品ID，查询商品属性 -->
	<select id="findGoodsAttributeMappings" resultType="GoodsAttributeMappings">
		SELECT 
		  goods_attr_id AS 'goodsAttrId',
		  attr_id AS 'attrId',
		  goods_id AS 'goodsId',
		  attr_value AS 'attrValue' 
		FROM
		  mtmydb.mtmy_goods_attribute_mappings 
		WHERE goods_id = #{goodsId}
	</select>
	
	<select id="findspecimgbyid" resultType="GoodsSpecImage">
		SELECT
			goods_id AS 'goodsId',
            spec_item_id AS 'specItemId',
            src 
		FROM
		  mtmydb.mtmy_spec_image 
		WHERE goods_id = #{goodsId}
	</select>
	
	<!-- 保存商品规格图片 -->
	<select id="savespecimg">
		INSERT INTO mtmydb.mtmy_spec_image
            (goods_id,
             spec_item_id,
             src)
		<foreach collection="goodsSpecImagesList" item="goodsSpecImage" separator=" union all ">
			SELECT  #{goodsSpecImage.goodsId}, 
					#{goodsSpecImage.specItemId}, 
					#{goodsSpecImage.src}
			FROM dual
		</foreach>
	</select>
	
	<!-- 删除商品规格图片 -->
	<delete id="deletespecimg">
		DELETE
			FROM mtmydb.mtmy_spec_image
		WHERE goods_id = #{goodsId}
	</delete>	
	
	<!-- 商品附属功能 -->
	<!-- 商品功效 -->
	<select id="findEffect" resultType="Effect">
		SELECT 
			e.ef_id AS efId,
			e.name,
			e.sort,
			e.add_time AS addTime,
			e.img
		FROM 
			mtmydb.mtmy_effect AS e
		WHERE e.del_flag = 0
			ORDER BY e.sort ASC,e.add_time DESC
	</select>
	<insert id="saveEffect">
		INSERT INTO mtmydb.mtmy_effect(
			name,
			sort,
			add_time,
			del_flag,
			img
		) VALUES (
			#{name},
			#{sort},
			SYSDATE(),
			#{DEL_FLAG_NORMAL},
			#{img }
		)
	</insert>
	<update id="deleteEffect">
		UPDATE 
			mtmydb.mtmy_effect 
			SET 
			del_flag = #{DEL_FLAG_DELETE}
			WHERE 
			ef_id = #{efId}
	</update>
	<update id="updateEffect">
		UPDATE 
			mtmydb.mtmy_effect 
			SET 
			name = #{name},
			sort = #{sort},
			del_flag = #{DEL_FLAG_NORMAL},
			img = #{img }
			WHERE 
			ef_id = #{efId}
	</update>
	<update id="updateActionId">
		UPDATE mtmydb.mtmy_goods SET 
		action_id =#{actionId},
		action_type=#{actionType}
		WHERE goods_id=#{goodsId}
	
	</update>
	<update id="modifyStoreCount" parameterType="map">
		UPDATE mtmydb.mtmy_goods SET store_count = #{store_count} WHERE goods_id = #{goods_id}
	</update>
	<update id="updateGoodsStauts">
		UPDATE mtmydb.mtmy_goods SET 
		is_on_sale = #{isOnSale},
		is_appshow = #{isAppshow}
		WHERE action_id =#{actionId}
	</update>
	<select id="queryStoreCount" resultType="StoreVo">
		SELECT 
			goods_id as goodsid, 
			store_count as storecount
		FROM mtmydb.mtmy_goods WHERE del_flag = 0
	</select>
	
	<select id="queryAllGoodsCollect" resultType="GoodsCollect">
		SELECT * FROM mtmydb.mtmy_goods_collect
	</select>
	
	<select id="queryAllUnshelve" resultType="int">
		SELECT goods_id FROM mtmydb.mtmy_goods WHERE del_flag = 0 AND is_on_sale = 0
	</select>
	<!-- 查询排序最大值 -->
	<select id="selectByMaxSort" resultType="int">
		SELECT MAX(sort) as num FROM mtmydb.mtmy_goods 
	</select>
	
	<!-- 根据goods_ids查询多个商品 -->
	<select id="selectGoodsList" resultType="Goods">
		SELECT 
			goods_id AS 'goodsId',
			goods_name AS 'goodsName'
		FROM mtmydb.mtmy_goods
		WHERE goods_id IN (${_parameter})
	</select>
	
	<!-- 城市异价中根据条件查询能参加异价的商品 -->
	<select id="queryGoodsCanRatio"  resultType="Goods">
		SELECT 
		  <include refid="goodsColumns"/>
		FROM
		  mtmydb.mtmy_goods g
		  <include refid="goodsJoins"/> 
		WHERE g.del_flag = 0 
		<if test="goodsCategoryId != null and goodsCategoryId != '' and goodsCategoryId != 0">
			AND g.category_id=#{goodsCategoryId} 
		</if>
		<if test="goodsName !=null and goodsName!=''">
			AND (g.goods_name like CONCAT('%', #{goodsName} , '%'))
		</if>
		<if test="goodsIds != null and goodsIds != '' and goodsIds.size() > 0">
			AND g.goods_id IN  
       		<foreach collection="goodsIds" item="item" index="index" open="(" separator="," close=")">  
            	#{item}  
        	</foreach> 
		</if>
		<if test="cityIds != null and cityIds != '' and cityIds.size() > 0">
			AND g.goods_id NOT IN (
				select DISTINCT goods_id from mtmydb.mtmy_goods_price_ratio_details where 
			<foreach collection="cityIds" item="item" index="index" separator="OR">  
            	city_ids like CONCAT('%',#{item},'%')
        	</foreach>)
		</if>
	</select>
</mapper>