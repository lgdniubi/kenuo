<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.training.modules.personnelfile.dao.UserFamilymemberDao" >
  <resultMap id="BaseResultMap" type="com.training.modules.personnelfile.entity.UserFamilymember" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="relation" property="relation" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="works" property="works" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="ischild" property="ischild" jdbcType="INTEGER" />
    <result column="name_type" property="nameType" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, name, relation, birthday, works, phone, ischild, name_type, create_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_familymember
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_familymember
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.training.modules.personnelfile.entity.UserFamilymember" >
    insert into user_familymember (id, user_id, name, 
      relation, birthday, works, 
      phone, ischild, contact_name, 
      create_date)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{relation,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{works,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{ischild,jdbcType=INTEGER}, #{contactName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.training.modules.personnelfile.entity.UserFamilymember" >
    insert into user_familymember
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="works != null" >
        works,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="ischild != null" >
        ischild,
      </if>
      <if test="nameType != null" >
        name_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="works != null" >
        #{works,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ischild != null" >
        #{ischild,jdbcType=INTEGER},
      </if>
      <if test="nameType != null" >
        #{nameType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.training.modules.personnelfile.entity.UserFamilymember" >
    update user_familymember
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="works != null" >
        works = #{works,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ischild != null" >
        ischild = #{ischild,jdbcType=INTEGER},
      </if>
      <if test="nameType != null" >
        name_type = #{nameType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.training.modules.personnelfile.entity.UserFamilymember" >
    update user_familymember
    set user_id = #{userId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      works = #{works,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      ischild = #{ischild,jdbcType=INTEGER},
      contact_name = #{contactName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="getObject" resultMap="BaseResultMap">
    select 
    	<include refid="Base_Column_List" />
    FROM
		user_familymember
	where baseInfo_id = #{baseInfoId}
	and name_type = #{nameType}
  </select>
  
  <delete id="deleteByUserId">
	    DELETE
		FROM
			user_familymember
		WHERE
			user_id = #{userId}
  </delete>
  
</mapper>